# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)
require 'open-uri'

Railscast.destroy_all
updater = RailscastsLoader.new JSON.parse(open("http://railscasts.com/episodes.json").read)
updater.update

Treasure.destroy_all
Treasure.create! [
  { railscast_id: Railscast.where(name: 'Custom Rake Tasks').first.id,
    description: 'Pick a random register using "order rand()"',
    time: '0:3:30',
    tag_list: "database" },
  { railscast_id: Railscast.where(name: 'Importing CSV and Excel').first.id,
    description: 'Create a hash from two arrays',
    time: '0:6:07',
    tag_list: "ruby, hash" },
  { railscast_id: Railscast.where(name: 'Importing CSV and Excel').first.id,
    description: 'Add model capabilities to a poro',
    time: '0:9:33',
    tag_list: "activemodel" },
  { railscast_id: Railscast.where(name: 'A Tour of State Machines').first.id,
    description: "Delegate to a method wich uses inquiry to provide question mark methods",
    time: '0:11:00',
    tag_list: "ruby, string" },
  { railscast_id: Railscast.where(name: 'A Tour of State Machines').first.id,
    description: "Use activerecord's merge to merge scopes from different models in a query",
    time: '0:11:47',
    tag_list: "activerecord, merge" },
  { railscast_id: Railscast.where(name: 'Sharing Mustache Templates').first.id,
    description: "Use fat arrow instead of skiny arrow to keep the scope of the class",
    time: '0:12:13',
    tag_list: "coffeescript, fat arrow, skiny arrow, class scope" },
  { railscast_id: Railscast.where(name: 'PayPal Basics').first.id,
    description: "Basic configuration of PayPal Sandbox",
    time: '0:01:33',
    tag_list: "paypal, sandbox" },
  { railscast_id: Railscast.where(name: 'PayPal Basics').first.id,
    description: "Generate url parameters from hash",
    time: '0:04:40',
    tag_list: "url, hash, params" },
  { railscast_id: Railscast.where(name: 'PayPal Notifications').first.id,
    description: "Controller method that render nothing",
    time: '0:04:21',
    tag_list: "controller, render, nothing" },
  { railscast_id: Railscast.where(name: 'PayPal Notifications').first.id,
    description: "Disable request from forgery protection to especific method",
    time: '0:03:50',
    tag_list: "controller, protect, forgery" },
  { railscast_id: Railscast.where(name: 'PayPal Notifications').first.id,
    description: "Serialize a field of the model",
    time: '0:05:45',
    tag_list: "model, serialize" },
  { railscast_id: Railscast.where(name: 'PayPal Notifications').first.id,
    description: "Simulate PayPal notification with curl",
    time: '0:09:15',
    tag_list: "paypal, curl" },
  { railscast_id: Railscast.where(name: 'HABTM Checkboxes (revised)').first.id,
    description: "Using dom_id to generate an id for checkbox",
    time: '0:04:45',
    tag_list: "dom_id, checkbox, id" },
  { railscast_id: Railscast.where(name: 'HABTM Checkboxes (revised)').first.id,
    description: "Using simple_form to generate collections of checkboxes",
    time: '0:05:30',
    tag_list: "checkboxes, simple_form, collection" },
  { railscast_id: Railscast.where(name: 'Hackers Love Mass Assignment (revised)').first.id,
    description: "Modify a form directly with browsers tools to send another parameter to the controller",
    time: '0:01:00',
    tag_list: "form, browser"},
  { railscast_id: Railscast.where(name: 'Hackers Love Mass Assignment (revised)').first.id,
    description: "Force mass-assigment protection for all the project",
    time: '0:04:30',
    tag_list: "security, mass-assignment"},
  { railscast_id: Railscast.where(name: 'Deploying to a VPS').first.id,
    description: "Create a Linode VPS",
    time: '0:02:40',
    tag_list: "linode, vps"},
  { railscast_id: Railscast.where(name: 'Deploying to a VPS').first.id,
    description: "Install postgresql server, create a database and user",
    time: '0:04:27',
    tag_list: "ubuntu, postgresql, sysadmin"},
  { railscast_id: Railscast.where(name: 'Deploying to a VPS').first.id,
    description: "Install nginx and start the service",
    time: '0:03:40',
    tag_list: "ubuntu, nginx, sysadmin"},
]
